// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Dashboard_Entity {
  id       Int    @id
  name     String
  parentId Int?

  parent                  Dashboard_Entity?         @relation("ParentChild", fields: [parentId], references: [id])
  children                Dashboard_Entity[]        @relation("ParentChild")
  groups                  Dashboard_Group[]
  assets                  Dashboard_Asset[]
  Dashboard_ProfileEntity Dashboard_ProfileEntity[]
}

model Dashboard_Profile {
  id                      Int                       @id
  name                    String
  Dashboard_ProfileEntity Dashboard_ProfileEntity[]
}

model Dashboard_ProfileEntity {
  id        Int @id
  profileId Int
  entityId  Int

  profile Dashboard_Profile @relation(fields: [profileId], references: [id])
  entity  Dashboard_Entity  @relation(fields: [entityId], references: [id])
  users   Dashboard_User[]

  @@unique([profileId, entityId])
}

// many to many relationship
model Dashboard_Group {
  id       Int              @id
  name     String
  entityId Int
  entity   Dashboard_Entity @relation(fields: [entityId], references: [id])

  users Dashboard_User[]
}

model Dashboard_User {
  id            Int                       @id
  name          String
  habilitations Dashboard_ProfileEntity[]
  groups        Dashboard_Group[]
}

model Dashboard_Location {
  id   Int    @id @default(autoincrement())
  name String

  assets Dashboard_Asset[]
}

model Dashboard_AssetType {
  id   Int    @id @default(autoincrement())
  name String @unique

  assets Dashboard_Asset[]
  models Dashboard_Model[]
  types  Dashboard_Type[]
}

model Dashboard_Type {
  id          Int
  name        String
  assetTypeId Int

  assetType Dashboard_AssetType @relation(fields: [assetTypeId], references: [id])
  assets    Dashboard_Asset[]

  @@id([id, assetTypeId])
}

model Dashboard_Model {
  id          Int
  name        String
  assetTypeId Int

  assetType Dashboard_AssetType @relation(fields: [assetTypeId], references: [id])
  assets    Dashboard_Asset[]

  @@id([id, assetTypeId])
}

model Dashboard_Asset {
  id          Int
  name        String
  entityId    Int
  assetTypeId Int
  locationId  Int?
  modelId     Int?
  typeId      Int?

  entity    Dashboard_Entity    @relation(fields: [entityId], references: [id])
  assetType Dashboard_AssetType @relation(fields: [assetTypeId], references: [id])
  location  Dashboard_Location? @relation(fields: [locationId], references: [id])
  model     Dashboard_Model?    @relation(fields: [modelId, assetTypeId], references: [id, assetTypeId])
  type      Dashboard_Type?     @relation(fields: [typeId, assetTypeId], references: [id, assetTypeId])

  @@id([id, assetTypeId])
}

model glpi_configs {
  id      Int    @id
  context String
  name    String
  value   String
}
